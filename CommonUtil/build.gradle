apply from: '../config.gradle'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.github.dcendents.android-maven'
repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}
group='jiaxiangdong0103' //这个是你的github用户名
version = 'v1.0.4'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        //这个是使用 Arouter必须加的
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main'
        main.resources.srcDirs += 'src/resources'
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api rootProject.ext.compilelibs["lottie"]
    api rootProject.ext.compilelibs["viewmodel"]
    api rootProject.ext.compilelibs["lifecycle"]
    api rootProject.ext.compilelibs["lifecycle-ktx"]
    api rootProject.ext.compilelibs["lifecycle-runtime-ktx"]
    api rootProject.ext.compilelibs["core-ktx"]
    api rootProject.ext.compilelibs["appcompat"]
    api rootProject.ext.compilelibs["material"]
    api rootProject.ext.compilelibs["constraintlayout"]
    api rootProject.ext.compilelibs["navigation-fragment"]
    api rootProject.ext.compilelibs["navigation-ui"]
    api rootProject.ext.compilelibs["arouter"]
    api rootProject.ext.compilelibs["fragment-ktx"]
    api rootProject.ext.compilelibs['MMKV']
    api rootProject.ext.compilelibs['annotation']
    kapt rootProject.ext.compilelibs['arouter-compiler']

}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}